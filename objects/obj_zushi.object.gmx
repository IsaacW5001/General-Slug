<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_down2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>obj_lifeform_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set fixed rotation 
event_inherited();

name = "Zushi";

spd = 4 ;
hspd = 0;
vspd = 0;
xaxis = 0;
yaxis = 0;
len = 0;


image_speed = 0;
//state = scr_move_state;
scr_get_input();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moves the player
event_inherited();
if(global.chosenactor == id){
    
//var origspd = spd; 
//var slimespd = origspd*.5;
    scr_get_input();
    /*image_blend = c_white;*/
  
    //get direction 
    
        t_speed = spd;
        t_fricy =  fricy ;
        t_fricx =  fricx ;
        t_acc =    acc;
        t_status = 0;
        var status_spd;
        status_spd = 0;
        
     /*   if(collision_point(x,y,obj_terrain,false,true)!= noone){
            with(obj_terrain){
                }
        }else{
        
        }
        */
        
 
    dir = point_direction(0,0, xaxis, yaxis);
    
    //get length
    
   
    if(xaxis == 0 and yaxis == 0) {
     len = 0;
    }else if(collision_point(x,y,obj_slime,true,true)){ 
    
          
       len = 2;
    }else{
         
         image_blend = c_white;
         len = t_speed + t_status;                        
                         
    }
    
    
    
    
    // get the hspd and vspod
    hspd = lengthdir_x(len,dir);
    vspd = lengthdir_y(len,dir);
    
    //move
    
    phy_position_x += hspd;
    phy_position_y += vspd;
    image_speed = .2;
        if(len == 0) image_index = 0;
        // vertical sprite
        if( vspd &gt; 0 ){
        sprite_index = spr_player_down2
        }
        else if (vspd &lt; 0 ){
        sprite_index = spr_player_up2}
    
        // horizontal
        
        if( hspd &gt; 0 ){
        sprite_index = spr_player_right2}
        else if (hspd &lt; 0 ){
        sprite_index = spr_player_left_2}
        
         //Friction implementation
    if(abs(len) &gt; 0)
    {
        if(abs(len) - t_fricx &lt; 0)
        {
            hspd = 0;
        }
        else
        {
            if(len &gt; 0)
                len -= t_fricx;
            else
                len += t_fricx;
        }
    }
    
 /*   if(abs(vspd) &gt; 0)
{
    if(abs(vspd) - t_fricy &lt; 0)
    {
        vspd = 0;
    }
    else
    {
        if(vspd &gt; 0)
            vspd -= t_fricy;
        else
            vspd += t_fricy;
    }
}  
  */      
        
    }else{
    selectedactor = noone;
    
 
    }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draws shadow
event_inherited();
draw_sprite(spr_player_shadow,image_index,x,y);
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.200000002980232</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>7.125,15.25</point>
    <point>6,16</point>
  </PhysicsShapePoints>
</object>
